package com.winsun.item.modular.compare.controller;

import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.baomidou.mybatisplus.plugins.Page;
import com.winsun.item.core.base.controller.BaseController;
import com.winsun.item.core.common.constant.factory.PageFactory;
import com.winsun.item.core.util.ResponseEntity;
import com.winsun.item.modular.compare.service.IComparedRecordService;
import com.winsun.item.modular.compare.service.IComparedService;
/**
 * 电子比算移动端接口
 *
 * @author zero
 * @Date 2018年11月9日
 */
@RestController
@RequestMapping("/compared")
public class ComparedController extends BaseController {

	@Autowired
	private IComparedService comparedService;
	
	@Autowired
	private IComparedRecordService comparedRecordService;
	
	@RequestMapping("/comparison")
	public Object compared(@RequestParam Map<String,Object> map){
//		System.err.println(map);
		Map<String, Object> result = comparedService.compare(map);
		String message = (String) result.get("msg");
		if(StringUtils.isNotBlank(message)){
			return ResponseEntity
					.newJSON("code", 400, "data", message);						
		}else{
			return ResponseEntity
					.newJSON("code", 200, "data", result);			
		}
	}
	
	
	
	@RequestMapping("/test")
	public Object test(){
//		System.err.println(map);
		Map<String, Object> result = comparedService.test();
		return ResponseEntity
				.newJSON("code", 200, "data", result);
	}
	
	@RequestMapping("agree")
	public Object agreeResult(String id){
		//比算日志记录
		System.err.println(id);
		int r = comparedRecordService.updateRecordStatus(id);
		if(r>0){
			return ResponseEntity
					.newJSON("code", 200, "message", "");			
		}else{
			return ResponseEntity
					.newJSON("code", 400, "message", "错误");
		}
	}
	
	@RequestMapping("record/list")
	public Object recordList(@RequestParam Map<String,Object> map){
		Page<Map<String,Object>> page = new PageFactory<Map<String,Object>>().defaultPage();
		System.out.println(page);
		List<Map<String,Object>> list = comparedRecordService.selectList(page,map);
		page.setRecords(list);
		return ResponseEntity
				.newJSON("code", 200, "data", list);	
	}
	
	@RequestMapping(value = "record/pc/list")//, method = RequestMethod.POST
	public Object recordList2(@RequestParam Map<String,Object> map){
		Page<Map<String,Object>> page = new PageFactory<Map<String,Object>>().defaultPage();
		System.out.println(page);
		List<Map<String,Object>> list = comparedRecordService.selectPcList(page,map);
		page.setRecords(list);
		return super.packForBT(page);
	}
	
	@RequestMapping(value="record/detail/{id}")
	public Object recordDetail(@PathVariable String id){
		Map<String,Object> data = comparedRecordService.selectById(id);
		return ResponseEntity
				.newJSON("code", 200, "data", data);
	}
}
